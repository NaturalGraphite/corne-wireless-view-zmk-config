/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {    
        behaviors {
                hm: homerow_mods {
                    compatible = "zmk,behavior-hold-tap";
                    label = "HOMEROW_MODS";
                    #binding-cells = <2>;
                    tapping-term-ms = <200>;
                    quick-tap-ms = <0>;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
                };
            };
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
// | ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | ESC |
// | RSE |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '  |
// | RET |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | RET |
//                   | TAB | LWR | SPC |   | BKSP| RSE | RET |
                        label = "Base";
                        bindings = <
   &kp ESC   &kp Q       &kp W        &kp E        &kp R            &kp T               &kp Y     &kp U         &kp I        &kp O       &kp P         &kp ESC
   &mo 2     &hm LGUI A  &hm LALT S   &hm LCTRL D  &hm LSHIFT F     &kp G               &kp H     &hm RSHIFT J  &hm RCTRL K  &hm RALT L  &hm RGUI SEMI &kp SQT
   &kp RET   &kp Z       &kp X        &kp C        &kp V            &kp B               &kp N     &kp M         &kp COMMA    &kp DOT     &kp FSLH      &kp RET
                                          &kp TAB      &mo 1        &kp SPACE           &kp RET   &kp BSPC      &kp DEL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        label = "Lower";
                        bindings = <
   &trans    &trans         &trans         &trans        &trans            &trans          &kp PLUS         &kp N7         &kp N8        &kp N9        &kp MINUS          &trans
   &trans    &hm LGUI LEFT  &hm LALT DOWN  &hm LCTRL UP  &hm LSHIFT RIGHT  &trans          &kp KP_MULTIPLY  &hm RSHIFT N4  &hm RCTRL N5  &hm RALT N6   &hm RGUI KP_DIVIDE &trans
   &trans    &kp HOME       &kp PG_DN      &kp PG_UP     &kp END           &kp K_APP       &kp LPAR         &kp N1         &kp N2        &kp N3        &kp RPAR           &trans
                                           &trans        &trans            &trans          &kp EQUAL        &kp N0         &kp DOT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        label = "Raise";
                        bindings = <
   &trans      &trans        &trans        &trans        &trans        &trans              &kp PSCRN   &kp F7         &kp F8        &kp F9        &kp F12          &trans
   &trans      &trans        &trans        &trans        &trans        &trans              &trans      &hm RSHIFT F4  &hm RCTRL F5  &hm RALT F6   &hm RGUI F11     &trans
   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4        &trans      &kp F1         &kp F2        &kp F3        &kp F10          &trans
                    	                   &trans        &trans        &trans              &trans      &trans         &trans
                        >;
                };
        };
};
